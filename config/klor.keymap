
//                               █         █    █            ▄▄▄▀▀▀▀▀▀▄▄▄        █▀▀▀▀▀▀▀▀▀▀█
//                               █        █     █          ▄▀            ▀▄      █          █
//                               █       █      █        ▄▀                ▀▄    █          █
//                               █      █       █        █                  █    █          █
//                               █     █        █       █                    █   █          █
//                               █    █         █       █                    █   █▄▄▄▄▄▄▄▄▄▄█
//                               █   █ █        █       █                    █   █      █
//                               █  █   █       █        █                  █    █       █
//                               █ █     █      █        ▀▄                ▄▀    █        █
//                               ██       █     █          ▀▄            ▄▀      █         █
//                               █         █    █▄▄▄▄▄▄▄▄    ▀▀▀▄▄▄▄▄▄▀▀▀        █          █
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>


/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        bhm_space: bhm_space {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        morph_enter: morph_enter {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp ENTER>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        morph_escape: morph_escape {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp ESC>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        morph_del: morph_del {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };
    };



        keymap {
                compatible = "zmk,keymap";

                base  {
                    bindings = <
             &kp Q  &kp W  &kp E     &kp R     &kp T        &kp Y     &kp U     &kp I      &kp O    &kp P
    &kp ESC   &kp A  &kp S  &bhm LCTRL D     &bhm LSHIFT F     &kp G        &kp H     &bhm LSHIFT J     &kp K      &kp L    &kp SEMI     &morph_del
    &kp TAB   &kp Z  &kp X  &kp C     &kp V     &kp B        &kp N     &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                                  &kp LGUI  &mo 1  &bhm_space RALT SPACE &kp LGUI   &kp LGUI  &kp RALT  &kp LALT  &kp LGUI   
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                nav {
                    bindings = <
    &kp F1  &kp HOME  &kp UP    &kp END    &kp PG_UP    &kp LC(LA(DEL))  &kp N7  &kp N8  &kp N9  &trans
    &trans  &kp F2  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN    &trans  &kp N4  &kp N5  &kp N6  &kp N0 &trans
    &kp F3  &kp F4  &kp F5    &kp F6    &kp F7     &kp F8       &trans  &kp N1  &kp N2  &kp N3  &trans  &trans 
                                  &trans    &trans     &trans       &trans  &trans  &trans &trans &trans
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

        };
};